# TODO:
# - determine the last backup date (this is a property on the corresponding ReplicationSource)
# - apply the replicationdestination.yaml
# - wait for the restore to finish
# - output the logs of the restore
# - start the pods in the namespace
# - prompt for the restore date? (snapshots made after the restore date will not be considered)
# - if the restore date is not provided, use the latest snapshot
# - cleanup the ReplicationDestination (only run once, so no need to keep it in the cluster post restore)

# also need to make this a "template" of sorts. So different backups/pvcs can be targeted for restores
# things that need to be dynamic:
# - namespace
# - pvc name
# - restic repository name
# - restic password
# - stop/start the pods in the namespace?
# - run as a different user (id 1000 was required for the ccinvoice-db-pvc, but this won't be the case for all PVCs)

# the below restores directly to the active PVC.
# kubectl apply -f ./scipts/backups/replicationdestination.yaml

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/volsync.backube/replicationdestination_v1alpha1.json
apiVersion: volsync.backube/v1alpha1
kind: ReplicationDestination
metadata:
  name: ccinvoice-restore
  namespace: ccinvoice
spec:
  trigger:
    manual: restore-once
  restic:
    repository: b2-ccinvoice
    destinationPVC: ccinvoice-db-pvc
    copyMethod: Direct
    storageClassName: local-path
    moverSecurityContext:
      runAsUser: 1000
    # restoreAsOf: "2025-01-01T00:00:00Z"
